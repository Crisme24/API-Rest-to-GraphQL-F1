type Query {
  "Lista de la temporadas de la Formula 1 de 1950 al 2021"
  seasonsList: [Season!]!
  """
  Obtenemos la información de las carreras seleccionadas por año
  Tener en cuenta que solo existen desde 1950 al 2021
  """
  racesByYear(year: String!): [Race!]!

  "Carrera seleccionada por año y por número de carrera"
  raceSelect(year: String!, round: Int!): Race

  """
  Lista de los pilotos de la F1 de toda la historia
  Tenemos 2 opciones:
  Por un lado podemos obtener todos los pilotos
  Por otro lado, hacemos uso de la paginación y podemos limitar el número de resultados
  """
  historyDrivers(pageElements: Int, page: Int): [Driver!]!

  "Pilotos por año"
  driversYear(year: String!): [Driver!]!

  "Pilotos por año y por número de carrera"
  driversYearAndRound(year: String, round: Int): [Driver!]!

  "Información del piloto seleccionado"
  driverSelect(id: String!): Driver

  "Clasificación final de los pilotos de una temporada"
  seasonPilotsRanking(year: String!): [DriverStanding!]!

  "Circuitos historicos"
  historyCircuits(pageElements: Int, page: Int): [Circuit!]!

  "Circuito seleccionado"
  circuitSelect(id: String!): Circuit
}

"Información de la temporada"
type Season {
  "Año de la temporada"
  year: String!
  "Información de wikipedia"
  url: String!
  "Información de wikipedia adaptada a los dispositivos móviles"
  urlMobile: String!
}

type Race {
  season: String!
  round: String!
  url: String!
  urlMobile: String!
  name: String!
  circuit: Circuit!
  date: String!
  time: String
}

type Circuit {
  id: String!
  url: String!
  urlMobile: String!
  name: String!
  location: Location!
}

type Location {
  lat: String!
  lng: String!
  locality: String!
  country: String!
}

type Driver {
  id: String!
  url: String!
  urlMobile: String!
  name: String!
  dateOfBirth: String!
  nationality: String!
  permanentNumber: String
  code: String
}


type DriverStanding {
  position: String!
  positionText: String!
  points: String!
  wins: String!
  driver: Driver!
  constructors: [Constructor!]!
}

type Constructor {
  id: String!
  url: String!
  urlMobile: String!
  name: String!
  nationality: String!
}